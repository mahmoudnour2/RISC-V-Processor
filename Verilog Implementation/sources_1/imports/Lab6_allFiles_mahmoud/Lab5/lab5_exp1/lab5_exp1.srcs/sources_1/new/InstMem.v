`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 10/03/2023 12:01:30 PM
// Design Name: 
// Module Name: InstMem
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module InstMem (input [9:0] addr, output [31:0] data_out);
 reg [31:0] mem [0:1023];
 assign data_out = mem[addr];
 

initial begin
//    mem[0] = 32'h00a00093;//addi x1, x0, 10 //10
//    mem[1] = 32'b11111111101100001000000010010011;//addi x1, x1, -5 //5
//    mem[2] = 32'b00000000011100001111000100010011;//andi x2, x1, 7  //5
//    mem[3] = 32'b00000000001000001110000110010011;//ori x3, x1, 2 //7
//    mem[4] = 32'b00000000101000010010001000010011;//slti x4, x2, 10 //1
//    mem[5] = 32'b00000000000000010010001010010011;//slti x5, x2, 0 //0
//    mem[6] = 32'b11111111101000010011001100010011;//sltiu x6, x2, -6 //1
//    mem[7] = 32'b11111111110000010011001110010011;//sltiu x7, x2, -4 //1 
//    mem[8] = 32'b00000000110100010100010000010011;//xori x8, x2, 13 //8
//    mem[9] = 32'b00000000001000010001010010010011;//slli x9, x2, 2 //20
//    mem[10] = 32'b00000000001000010101010100010011;//srli x10, x2, 2 //1
//    mem[11] = 32'b11111111111000000000010110010011;//addi x11, x0, -2 //-2
//    mem[12] = 32'b01000000000101011101011000010011;//srai x12, x11, 1 //-1   
    
    
//    mem[13] = 32'b00000000010100000000000010010011;//addi x1, x0, 5 //5
//    mem[14] = 32'b00000000001100000000000100010011;//addi x2, x0, 3 //3
//    mem[15] = 32'b00000000001000001000000110110011;//add x3, x1, x2  //8
//    mem[16] = 32'b01000000001000001000001000110011;//sub x4, x1, x2 //2
//    mem[17] = 32'b00000000001000001001001010110011;//sll x5, x1, x2 //40
//    mem[18] = 32'b00000000001000001101001100110011;//srl x6, x1, x2 //0
//    mem[19] = 32'h4013d43;//sra x8, x7, x1 //0 ?
//    mem[20] = 32'h0020f4b3;//and x9, x1, x2 //1
//    mem[21] = 32'h0x0020e533;//or x10, x1, x2 //7
//    mem[22] = 32'h0x0020c5b3;//xor x11, x1, x2 //6
//    mem[23] = 32'h0x00112633;//slt x12, x2, x1 //1
//    mem[24] = 32'h0x0070b6b3;//sltu x13, x1, x7 //0  
                 
                 
//    mem[25] = 32'h0x0002a0b7;//lui x1, 42 //172032
                 
                 
//    mem[26] = 32'h00102823;//sw x1, 16(x0) //172032
//    mem[27] = 32'h00201a23;//sh x2, 20(x0) //3
//    mem[28] = 32'h00300c23;//sb x3, 24(x0) //8
//    mem[29] = 32'h01002083;// lw x1, 16(x0)  // 5
//    mem[30] = 32'h01401103;// lh x2, 20(x0)  // 3
//    mem[31] = 32'h01800183;// lb x3, 24(x0)  // 8
//    mem[32] = 32'h01805203;// lhu x4,24(x0)  // 8
//    mem[33] = 32'h01804283;// lbu x5,24(x0)  // 8  
//    mem[34] = 32'h00090517; // auipc x10, 144//589960 
//    mem[35] = 32'h008000ef; //jal x1,8 //
//    mem[36] = 32'h00b50e63; // fence 
//    mem[37] = 32'h08b50c63; //beq x10, x11, 152 //no jump
//    mem[38] = 32'h00b51463;//bne x10, x11, 8 //jump
//    mem[39] = 32'h00000073; // ecall 
//    mem[40] = 32'h01700b93; //addi x23, x0,23 //23
//    mem[41] = 32'h06b65063; // bge x12, x11, 96 //no jump
//    mem[42] = 32'h04c5ce63; //blt x11, x12, 92 //no jump
//    mem[43] = 32'h04b67c63; //bgeu x12, x11, 88 //no jump
//    mem[44] = 32'h04c5ea63; //bltu x11, x12, 84 //no jump
//    mem[45] = 32'h00100073;// ebreak
//    mem[46] = 32'h00008067; // jalr x0, 0(x1) 


//mem[0]  = 32'h00a00093; // addi x1, x0, 10 //10
//mem[1]  = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[2]  = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[3]  = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[4]  = 32'b11111111101100001000000010010011; // addi x1, x1, -5 //5
//mem[5]  = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[6]  = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[7]  = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[8]  = 32'b00000000011100001111000100010011; // andi x2, x1, 7  //5
//mem[9]  = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[10] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[11] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[12] = 32'b00000000001000001110000110010011; // ori x3, x1, 2 //7
//mem[13] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[14] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[15] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[16] = 32'b00000000101000010010001000010011; // slti x4, x2, 10 //1
//mem[17] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[18] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[19] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[20] = 32'b00000000000000010010001010010011; // slti x5, x2, 0 //0
//mem[21] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[22] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[23] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[24] = 32'b11111111101000010011001100010011; // sltiu x6, x2, -6 //1
//mem[25] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[26] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[27] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[28] = 32'b11111111110000010011001110010011; // sltiu x7, x2, -4 //1
//mem[29] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[30] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[31] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[32] = 32'b00000000110100010100010000010011; // xori x8, x2, 13 //8
//mem[33] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[34] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[35] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[36] = 32'b00000000001000010001010010010011; // slli x9, x2, 2 //20
//mem[37] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[38] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[39] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[40] = 32'b00000000001000010101010100010011; // srli x10, x2, 2 //1
//mem[41] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[42] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[43] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[44] = 32'b11111111111000000000010110010011; // addi x11, x0, -2 //-2
//mem[45] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[46] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[47] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[48] = 32'b01000000000101011101011000010011; // srai x12, x11, 1 //-1
//mem[49] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[50] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[51] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[52] = 32'b00000000010100000000000010010011; // addi x1, x0, 5 //5
//mem[53] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[54] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[55] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[56] = 32'b00000000001100000000000100010011; // addi x2, x0, 3 //3
//mem[57] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[58] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[59] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[60] = 32'b00000000001000001000000110110011; // add x3, x1, x2  //8
//mem[61] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[62] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[63] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[64] = 32'b01000000001000001000001000110011; // sub x4, x1, x2 //2
//mem[65] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[66] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[67] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[68] = 32'b00000000001000001001001010110011; // sll x5, x1, x2 //40
//mem[69] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[70] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[71] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[72] = 32'b00000000001000001101001100110011; // srl x6, x1, x2 //0
//mem[73] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[74] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[75] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[76] = 32'h4013d433; // sra x8, x7, x1 //0 
//mem[77] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[78] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[79] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[80] = 32'h0020f4b3; // and x9, x1, x2 //1
//mem[81]  = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[82]  = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[83]  = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[84]  = 32'h0020e533; // or x10, x1, x2 //7
//mem[85]  = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[86]  = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[87]  = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[88]  = 32'h0020c5b3; // xor x11, x1, x2 //6
//mem[89]  = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[90]  = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[91]  = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[92]  = 32'h00112633; // slt x12, x2, x1 //1
//mem[93]  = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[94]  = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[95]  = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[96]  = 32'h0070b6b3; // sltu x13, x1, x7 //0
//mem[97]  = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[98]  = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[99]  = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[100] = 32'h0002a0b7; // lui x1, 42 //172032
//mem[101] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[102] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[103] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[104] = 32'h00102823; // sw x1, 16(x0) //172032
//mem[105] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[106] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[107] = 32'h00201a23; // sh x2, 20(x0) //3
//mem[108] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[109] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[110] = 32'h00300c23; // sb x3, 24(x0) //8
//mem[111] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[112] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[113] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[114] = 32'h01002083; // lw x1, 16(x0)  // 172032
//mem[115] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[116] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[117] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[118] = 32'h01401103; // lh x2, 20(x0)  // 3
//mem[119] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[120] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[121] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[122] = 32'h01800183; // lb x3, 24(x0)  // 8
//mem[123] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[124] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[125] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[126] = 32'h01805203; // lhu x4,24(x0)  // 8
//mem[127] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[128] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[129] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[130] = 32'h01804283; // lbu x5,24(x0)  // 8
//mem[131] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[132] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[133] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[134] = 32'h00090517; // auipc x10, 144//589960
//mem[135] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[136] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[137] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[138] = 32'h008000ef; // jal x1,8 //
//mem[139] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[140] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[141] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[142] = 32'h00b50e63; // fence
//mem[143] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[144] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[145] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[146] = 32'h08b50c63; // beq x10, x11, 152 //no jump
//mem[147] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[148] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[149] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[150] = 32'h00b51463; // bne x10, x11, 8 //jump
//mem[151] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[152] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[153] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[154] = 32'h00000073; // ecall
//mem[155] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[156] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[157] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[158] = 32'h01700b93; // addi x23, x0,23 //23
//mem[159] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[160] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[161] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[162] = 32'h06b65063; // bge x12, x11, 96 //no jump
//mem[163] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[164] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[165] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[166] = 32'h04c5ce63; // blt x11, x12, 92 //no jump
//mem[167] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[168] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[169] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[170] = 32'h04b67c63; // bgeu x12, x11, 88
//mem[171] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[172] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[173] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[174] = 32'h04c5ea63; // bltu x12, x11, 84 //no jump
//mem[175] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[176] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[177] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[178] = 32'h00100073; // ebreak
//mem[179] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[180] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[181] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[182] = 32'h00008067; // jalr x0, 0(x1)
//mem[183] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[184] = 32'b0000000_00000_00000_000_00000_0110011; // noop
//mem[185] = 32'b0000000_00000_00000_000_00000_0110011; // noop


    mem[0]=32'b0000000_00000_00000_000_00000_0110011 ; //add x0, x0, x0
    mem[1]=32'b0000000_00000_00000_000_00000_0110011 ; //add x0, x0, x0
    mem[2]=32'b0000000_00000_00000_000_00000_0110011 ; //add x0, x0, x0
    mem[3]=32'b000000000000_00000_010_00001_0000011 ; //lw x1, 0(x0)
    mem[4]=32'b000000000100_00000_010_00010_0000011 ; //lw x2, 4(x0)
    mem[5]=32'b000000001000_00000_010_00011_0000011 ; //lw x3, 8(x0)
    mem[6]=32'b0000000_00010_00001_110_00100_0110011 ; //or x4, x1, x2
    mem[7]=32'h00320463; //beq x4, x3, 8
    mem[8]=32'b0000000_00010_00001_000_00011_0110011 ; //add x3, x1, x2
    mem[9]=32'b0000000_00010_00011_000_00101_0110011 ; //add x5, x3, x2
    mem[10]=32'b0000000_00101_00000_010_01100_0100011; //sw x5, 12(x0)
    mem[11]=32'b000000001100_00000_010_00110_0000011 ; //lw x6, 12(x0)
    mem[12]=32'b0000000_00000_00000_000_00000_0110011 ; //add x0, x0, x0
    mem[13]=32'b0000000_00001_00110_111_00111_0110011 ; //and x7, x6, x1
    mem[14]=32'b0100000_00010_00001_000_01000_0110011 ; //sub x8, x1, x2
    mem[15]=32'b0000000_00010_00001_000_00000_0110011 ; //add x0, x1, x2
    mem[16]=32'b0000000_00001_00000_000_01001_0110011 ; //add x9, x0, x1              
                  
                  
end               
                  
                  
                  
endmodule         
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
